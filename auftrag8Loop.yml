---
- name: "Auftrag 8: Loops und Conditionals"
  hosts: localhost
  gather_facts: false
  become: true
  vars:
    folders:
      - docs
      - docs/images
      - src
      - bin
      - lib

    packages:
      - nginx

    users:
      - name: armin
        pubkey: "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3YXZTrjfrkxqadOufvEFZznt4ja8pGi6ylpYPu2QATpzOXTY3eX3Z7ql9ZYZ0xyKi+rKsKKNffqE1Wj4rm32iaThb6AOJvANDaIJJeLSDU/bmnQ8fS4RA2PiAqs7Pl+bbuUy431TdRcMNQ2r5eUmDyo1G5a/7mWC0TvW6qQSttlGe+fsLnkqK2xB/IvqoIaNSHmyWSFa8KNNnMqSrH+jZgxTxLCrvXt9bN86DOybe9cLkBEwooL1iTIw1j+7BQtWYCys3vM8DIIENOOuynZs9VHjYuayFjkyxu2vptwZujWqtSLGUBWEcXa49C1iHOMypRsTW5KM7Ndu/IrFGLsRjw== ado@macbookair.local"
        state: "present"
        group: "lehrer"
      - name: marcello
        pubkey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCz/wpWmsCxaQyuNFrIachc/q9nUdByoUcBcicl/wnKLFktKp6du9np9Uhmo4M0tVHNnWCt5uNEi2ks/0XEbg2J+4heuAAKEDr/TVbgabiWGclYKpEWZvmw8gsQwfpAKVG4aS2re7wB2uhw82ZqzJVpGm3ne+sNnz5uVrxN8HUnuR2OWJD6bA9l/fBmE6zdObVXgrCJGjZmVyB5GMeTDJKExgoBpLggZn9CNdu7Sx989xtNLehu6SWM+mGCq9Lcu7usiPG+SuEb8XynYaCOnv8+Oko6SYeJ9Omq/E7Eg6vZHqCbBQ81TIZrGKcikLmF2xP7EOprGOSPVewke7ak7vvmOI+p/RfIAyXj1+GYny+esk9G+qDRFXP9uiIlMfH1oGkQkztvSDMH+EOHqgY66NWQJPj83CaWH/euR0MROHXjm1ar3RuN9qcASAnzCOQQ1FMwFkpIV5x0NDRx0Zp1rLt8ZUFykmIuHZI4g9u6RdAiuWUxx9/eF0fXZa6Ju7GEMKeMtZxJJjmB/WCOylbkT+NPw5RcxgyRLKmUAicnYKXBmULY3pQM/Ui8KiCyJqRbLDBAR+XZYsZ7X5uhcuteu8KIfA2xEbInB4Q3c0DnnSih+GEC4pEbz+NOfeCpLJEn4gfyV1S9S08sG62ls8NPFociA9aWmE1oXfcqwvOkkYhxOw== marcello.calisto@tbz.ch"
        state: "present"
        group: "lehrer"

    group:
      - "lehrer"
      - "students"

  tasks:
    - name: "Trust public key on ubuntu-user"
      ansible.posix.authorized_key:
        user: "ubuntu"
        state: "{{ item.state }}"
        key: "{{ item.pubkey }}"
      loop:
        - "{{ users }}"

    - name: "Create folder structure"
      ansible.builtin.file:
        path: "{{ ('/home/ubuntu', item) | path_join }}"
        state: directory
      loop:
        - "{{ folders }}"

    - name: "Install packages"
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present

    - name: "Deploy html-file"
      ansible.builtin.copy:
        dest: "/var/www/html/index.html"
        content: "<html><body><h1>Website</h1></body></html>"
        owner: "www-data"
        group: "www-data"
        mode: 0640
    
    - name: "Set aliases for ubuntu-user"
      lineinfile:
        path: "/home/ubuntu/.bashrc"
        line: "alias tf='tail -f'"
        state: present

    - name: "Create Group"
      ansible.builtin.group:
        name: "{{ item.group }}"
        state: present
      loop: "{{ group }}"

    - name: "Create User"
      ansible.builtin.user:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        group: "{{ item.group }}"
      loop: 
        - "{{ users }}"
        - { name: "student[a-z]", group: "students" }

    - name: "Create sites"
      ansible.builtin.file:
        path: "/var/www/html/site[1-99]/{bin,src,doc}"
        state: directory

    - name: "File"
      ansible.builtin.copy:
        dest: "/var/www/html/site{{ item }}/index.html"
        content: "<html><body><h1>This is site{{ item }}</h1></body></html>"
      loop: "{{ range(1, 99) | list }}"

    - name: "Set permissions"
      ansible.builtin.file:
        path: "var/www/html"
        owner: "www-data"
        group: "www-data"
        recurse: true

    - name: List packages starting with "cloud-init"
      ansible.builtin.command:
        cmd: "dpkg --list | grep '^ii' | awk -F" " '/cloud-init/ { print $2 }'"
      register: cloud_init_packages
        
    - name: Remove packages starting with "cloud-init"
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
      with_items: "{{ cloud_init_packages.stdout_lines }}"


    
    

        